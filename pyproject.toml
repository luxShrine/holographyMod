[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=68", "wheel" ]

[project]
name = "holo"
version = "0.1.0"
description = "CLI for hologram autofocus training / evaluation"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "beartype>=0.21",
  "click>=8.1,<8.2",
  "dash>=3.0.4",
  "lblprof>=0.1.6",
  "line-profiler>=4.2",
  "matplotlib>=3.10.1",
  "numpy>=2.2.4",
  "pillow>=11.2.1",
  "pint>=0.24.4",
  "plotly>=6.0.1",
  "plotly-stubs>=0.0.5",
  "polars>=1.27.1",
  "python-json-logger>=3.3",
  "rich>=13.6",
  "ruff>=0.11.7",
  "scikit-learn>=1.6.1",
  "scipy>=1.15.2",
  "seaborn>=0.13.2",
  "statsmodels>=0.14.4",
  "timm>=1.0.15",
  "torch>=2.6",
  "torchoptics>=0.3.1",
  "torchvision>=0.21",
  "ty>=0.0.1a6",
]

scripts.holo = "holo.cli:cli"

[tool.setuptools]
package-dir = { "" = "src" } # ← tell it “everything lives in src/”

[tool.setuptools.packages.find] # optional but explicit
where = [ "src" ]

[tool.ruff]
target-version = "py312"
line-length = 100
src = [ "src", "tests" ]
exclude = [ ".venv", "src/data", "src/static" ]
respect-gitignore = true
unsafe-fixes = true
show-fixes = true
format.quote-style = "double"
format.docstring-code-format = true
lint.isort.known-first-party = [ "holo" ]
lint.isort.known-third-party = [ "matplotlib", "torch", "torchvision", "polars", "numpy", "PIL" ]
select = [
  "B",
  "D",
  "F",   # Pyflakes rules
  "W",   # PyCodeStyle warnings
  "E",   # PyCodeStyle errors
  "I",   # Sort imports properly
  "UP",  # Warn if certain things can changed due to newer Python versions
  "C4",  # Catch incorrect use of comprehensions, dict, list, etc
  "FA",  # Enforce from __future__ import annotations
  "ISC", # Good use of string concatenation
  "ICN", # Use common import conventions
  "RET", # Good return practices
  "SIM", # Common simplification rules
  "TID", # Some good import practices
  "TC",  # Enforce importing certain types in a TYPE_CHECKING block
  "PTH", # Use pathlib instead of os.path
  "TD",  # Be diligent with TODO comments
  "NPY", # Some numpy-specific things
]
ignore = [
  "D100",   # Missing docstring in public module
  "D104",   # no module-level docstring
  "D203",   # blank line required before class docstring
  "D211",   # no-blank-line-before-class
  "D213",   # multi-line-summary-second-line
  "B008",   # call function in argument default
  "ISC001", # Conflicts with formatter ruff
  "TD002",  # Author in todo
  "TD003",  # Issue in todo
  "W291",   # Trailing whitespace
  "W293",   # Line only has whitespace
]

[tool.basedpyright]
pythonVersion = "3.12"
# typeCheckingMode = "off" # off, basic, standard, strict, recommended, all 
allowedUntypedLibraries = [
  "matplotlib",
  "mpl_toolkits",
  # "plotly.graph_objects" 
]
reportMissingTypeStubs = false
# exclude = [ "src/tex", "src/static", "src/data", "**/__pycache__" ]
include = [ "src/holo" ]
reportExplicitAny = "none"
reportCallInDefaultInitializer = "none"
